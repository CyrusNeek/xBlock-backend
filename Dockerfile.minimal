# Minimal Dockerfile for Django on Cloud Run
FROM python:3.11-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    netcat-traditional \
    procps \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt /app/requirements.txt
RUN pip install --no-cache-dir -r /app/requirements.txt

# Copy entrypoint script
COPY entrypoint.sh /app/entrypoint.sh

# Convert CRLF to LF for entrypoint.sh (if any)
RUN sed -i 's/\r$//' /app/entrypoint.sh

# Copy the rest of the project files into /app
COPY . /app/

# Ensure entrypoint script is executable (after all copies)
RUN chmod +x /app/entrypoint.sh

# List contents of /app for debugging build (this should be before ENTRYPOINT)
RUN ls -la /app

# Expose port
EXPOSE 8080

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# NOTE: Running as root for Cloud Run
# Use CMD instead of ENTRYPOINT to avoid entrypoint.sh issues

# Create a startup script directly in the Dockerfile
RUN echo '#!/bin/bash\n\
echo "Starting application directly from CMD"\n\
export DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-xblock.settings.production}\n\
echo "Using Django settings module: $DJANGO_SETTINGS_MODULE"\n\
export PORT=${PORT:-8080}\n\
echo "Using PORT: $PORT"\n\
python manage.py collectstatic --noinput || echo "collectstatic failed"\n\
python manage.py migrate || echo "migrate failed"\n\
exec gunicorn xblock.wsgi:application --bind 0.0.0.0:$PORT --workers 3 --timeout 300 --log-level=info\n\
' > /app/start.sh \
    && chmod +x /app/start.sh \
    && cat /app/start.sh

# Use CMD instead of ENTRYPOINT
CMD ["/bin/bash", "/app/start.sh"]
