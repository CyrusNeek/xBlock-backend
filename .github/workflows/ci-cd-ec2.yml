name: Build And Deploy (Dev VM)

on:
  push:
    branches:
    - dev
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Deploy the latest changes from DEV to server

    steps:

    - name: Checkout the files
      uses: actions/checkout@v3

    # ✅ Debug SSH Key Fingerprint
    - name: Debug – Show SSH private key fingerprint
      run: |
        echo "${{ secrets.EC2_SSH_KEY_DEV }}" > /tmp/key.pem
        chmod 600 /tmp/key.pem
        ssh-keygen -l -f /tmp/key.pem

    # ✅ SSH Test
    - name: Test SSH Connection
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS_DEV }}
        username: ${{ secrets.USERNAME_DEV }}
        key: ${{ secrets.EC2_SSH_KEY_DEV }}
        script: |
          echo "✅ SSH connection succeeded"
          whoami
          hostname

    # ✅ Deploy files (if needed)
    - name: Deploy to main server
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_DEV }}
        REMOTE_HOST: ${{ secrets.HOST_DNS_DEV }}
        REMOTE_USER: ${{ secrets.USERNAME_DEV }}
        TARGET: /home/git-action/dev/server

    # ✅ Execute deployment commands
    - name: Executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DNS_DEV }}
        username: ${{ secrets.USERNAME_DEV }}
        key: ${{ secrets.EC2_SSH_KEY_DEV }}
        command_timeout: 25m
        script: |
          sudo apt -y update
          cd /home/git-action/dev/server
          cp ./server/docker-compose.dev.yml -f .
          sudo echo ${{ secrets.CREDENTIALS_JSON_BASE64 }} | base64 --decode > server/credentials.json
          sudo echo "${{ secrets.XBRAIN_BACKEND_ENV_DEV }}" > server/.env

          sudo echo "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 --decode > server/firebase_credentials.json
          sudo echo -e "\nGCP_BUCKET_NAME=xblock_beta_storage\n" >> server/.env

          sudo docker compose -f docker-compose.dev.yml pull web
          sudo docker compose -f docker-compose.dev.yml down
          sudo docker compose -f docker-compose.dev.yml up web redis celery beat -d --build
          sudo docker exec -i dev-web-1 python manage.py makemigrations --merge --no-input
          sudo docker exec -i dev-web-1 python manage.py migrate
          sudo docker system prune -a -f
